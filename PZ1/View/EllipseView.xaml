<Window x:Class="PZ1.View.EllipseView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PZ1.UserControl1"
        xmlns:validators="clr-namespace:PZ1.Validators"
        xmlns:Controls="clr-namespace:PZ1.Watermark"
        xmlns:local1 ="clr-namespace:PZ1"
        mc:Ignorable="d"
        Title="EllipseView" Height="367.659" Width="492.576">
    <Grid Background="LightBlue" Margin="0,0,-6,3">
        <Label Content="Draw an Ellipse" HorizontalAlignment="Left" Margin="135,10,0,0" FontSize="29" FontWeight="DemiBold" FontFamily="Century Gothic" Foreground="Black"  VerticalAlignment="Top" Height="47" Width="214"/>
        <Label Content="RadiusX (1-365):" HorizontalAlignment="Left" Margin="27,64,0,0" FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black"  VerticalAlignment="Top" Height="31" Width="158"/>
        <Label Content="RadiusY (1-165):" HorizontalAlignment="Left" Margin="27,100,0,0" FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black"  VerticalAlignment="Top" Height="36" Width="158"/>
        <Label Content="Fill Color:" HorizontalAlignment="Left" Margin="27,141,0,0" FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black"  VerticalAlignment="Top" Height="36" Width="148"/>
        <Label Content="Border Color:" HorizontalAlignment="Left" Margin="27,182,0,0" FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black"  VerticalAlignment="Top" Height="36" Width="167"/>
        <Label Content="Border Thickness (0-9):" HorizontalAlignment="Left" Margin="27,223,0,0" FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black"  VerticalAlignment="Top" Height="31" Width="222" RenderTransformOrigin="0.5,0.5"></Label>
        <TextBox x:Name="Radiusx" MaxLength="3" HorizontalAlignment="Left" Height="31"  Margin="266,64,0,0" PreviewTextInput="NumberValidationTextBox" TextWrapping="Wrap" Foreground="Black"  FontSize="16"  VerticalContentAlignment="Top" HorizontalContentAlignment="Right" FontFamily="Century Gothic" VerticalAlignment="Top" Width="190" RenderTransformOrigin="-0.583,-1.304">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel LastChildFill="True">
                                    <Border BorderBrush="Red" BorderThickness="1">
                                        <AdornedElementPlaceholder />
                                    </Border>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="TextBox.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.Text>
                <Binding Path="RadiusXValidation" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:StringRangeValidationRule 
                            MinimumLength="1" 
			                MaximumLength="365"/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <TextBox Name="Radiusy" MaxLength="3" HorizontalAlignment="Left" Height="31" Margin="266,100,0,0" PreviewTextInput="NumberValidationTextBox" TextWrapping="Wrap" Foreground="Black"  FontSize="16"  VerticalContentAlignment="Top" HorizontalContentAlignment="Right" FontFamily="Century Gothic" VerticalAlignment="Top" Width="190" RenderTransformOrigin="-0.583,-1.304">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel LastChildFill="True">
                                    <Border BorderBrush="Red" BorderThickness="1">
                                        <AdornedElementPlaceholder />
                                    </Border>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                        
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="TextBox.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.Text>
                <Binding Path="RadiusYValidation" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:StringRangeValidationRule 

            MinimumLength="1" 
			MaximumLength="165"

           />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <local:Colorpicker  x:Name="FillColor" Grid.Row="0" Margin="266,136,0,0" Height="37" Width="190"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
        <local:Colorpicker  x:Name="BorderColor" Grid.Row="0" Margin="266,178,0,0" Height="37" Width="190"  VerticalAlignment="Top" HorizontalAlignment="Left"/>
        <TextBox Name="BordThicknes" MaxLength="1" HorizontalAlignment="Left" Height="31" Margin="266,220,0,0" PreviewTextInput="NumberValidationTextBox" TextWrapping="Wrap"  Foreground="Black"  FontSize="16"  VerticalContentAlignment="Center" HorizontalContentAlignment="Right" FontFamily="Century Gothic" VerticalAlignment="Top" Width="190" RenderTransformOrigin="-0.583,-1.304">
            <TextBox.Style>
                <Style TargetType="{x:Type TextBox}">
                    <Setter Property="Validation.ErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <DockPanel LastChildFill="True">
                                    <Border BorderBrush="Red" BorderThickness="1">
                                        <AdornedElementPlaceholder />
                                    </Border>
                                </DockPanel>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="Validation.HasError" Value="true">
                            <Setter Property="TextBox.ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Style>
            <TextBox.Text>
                <Binding Path="BorderThickValidation" UpdateSourceTrigger="PropertyChanged">
                    <Binding.ValidationRules>
                        <validators:StringRangeValidationRule 

            MinimumLength="0" 
			MaximumLength="9"

           />
                    </Binding.ValidationRules>
                </Binding>
            </TextBox.Text>
        </TextBox>
        <Button Content="Cancel" HorizontalAlignment="Left" Margin="27,285,0,0" VerticalAlignment="Top" Width="212" Height="31" Background="White"  FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black" Click="BClose"/>
        <Button Content="Draw" HorizontalAlignment="Left" Margin="244,285,0,0" VerticalAlignment="Top" Width="212" Height="31" Background="White"  FontSize="20" FontFamily="Century Gothic" FontWeight="DemiBold" Foreground="Black" Click="DrawEllipseButton">
            <Button.Style>
                <Style TargetType="{x:Type Button}">
                    <Style.Triggers>

                        <DataTrigger Binding="{Binding ElementName=FillColor, Path=SelectedColor}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding ElementName=BorderColor, Path=SelectedColor}" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=Radiusx}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=Radiusy}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, ElementName=Radiusx}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, ElementName=Radiusy}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Text, ElementName=BordThicknes}" Value="">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=BordThicknes}" Value="True">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

    </Grid>
</Window>
